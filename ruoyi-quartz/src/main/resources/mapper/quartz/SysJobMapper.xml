<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.quartz.mapper.SysJobMapper">

	<resultMap type="SysJob" id="SysJobResult">
		<id     property="jobId"          column="job_id"          />
		<result property="jobName"        column="job_name"        />
		<result property="jobGroup"       column="job_group"       />
		<result property="invokeTarget"   column="invoke_target"   />
		<result property="cronExpression" column="cron_expression" />
		<result property="misfirePolicy"  column="misfire_policy"  />
		<result property="concurrent"     column="concurrent"      />
		<result property="status"         column="status"          />
		<result property="createBy"       column="create_by"       />
		<result property="createTime"     column="create_time"     />
		<result property="updateBy"       column="update_by"       />
		<result property="updateTime"     column="update_time"     />
		<result property="remark"         column="remark"          />
	</resultMap>



	<sql id="TagInfoVo">
       TagKey as tagKey ,
       TagName as tagName ,
       TagDesc as tagDesc ,
       TagType as tagType ,
       DataType as dataType ,
       ValueType as valueType ,
	   DigCount as digCount ,
       Unit as unit ,
       SystemType as systemType ,
       RangMin as rangMin ,
       RangMax as rangMax ,
       LowAlarm as lowAlarm ,
       DealAlarm as dealAlarm ,
       SendSms as sendSms ,
       CreateDate as createDate ,
       CreateUserId as createUserId ,
       CreateUserName as createUserName ,
       ModifyDate as modifyDate ,
       ModifyUserId as modifyUserId ,
       ModifyUserName as modifyUserName

	</sql>

    <sql id="LiveDataVo">
     TagKey as tagKey ,
     value as value ,
     timestamp as timestamp ,
     TagStatus as tagStatus

	</sql>

	<sql id="AlarmHisVo">
     ID as id ,
     TagKey as tagKey ,
     LowAlarm as lowAlarm ,
     StartValue as startValue ,
     EndValue as endValue ,
     AvgValue as avgValue ,
     MaxValue as maxValue ,
     Duration as duration,
     StartTime as startTime ,
     EndTime as endTime ,
     CreateTime as createTime

	</sql>

	<sql id="AlarmRealVo">
     ID as id ,
     TagKey as tagKey ,
     LowAlarm as lowAlarm ,
     StartValue as startValue ,
     EndValue as endValue ,
     AvgValue as avgValue ,
     MaxValue as maxValue ,
     Duration as duration ,
     StartTime as startTime ,
     EndTime as endTime ,
     CreateTime as createTime

	</sql>

	<sql id="InfoEventVo">
		id_ as id ,
		time_ as times ,
		systype as systype ,
		tagname as tagname ,
		tagkey as tagkey ,
		Device as device ,
		SubDevice as subDevice ,
		addr_ as addr ,
		val_ as val ,
		info_ as info,
		event_ as event ,
		class_ as classs ,
		user_ as users ,
		res_ as res ,
		varinfo_ as varinfo ,
		confirm_ as confirm ,
		cuser_ as cuser ,
		ctime_ as ctime

	</sql>

	<sql id="selectJobVo">
        select job_id, job_name, job_group, invoke_target, cron_expression, misfire_policy, concurrent, status, create_by, create_time, remark 
		from sys_job
    </sql>


	<select id="selectJobList" parameterType="SysJob" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		<where>
			<if test="jobName != null and jobName != ''">
				AND job_name like '%'+#{jobName}+ '%'
			</if>
			<if test="jobGroup != null and jobGroup != ''">
				AND job_group = #{jobGroup}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="invokeTarget != null and invokeTarget != ''">
				AND invoke_target like '%'+#{invokeTarget}+ '%'
			</if>
		</where>
	</select>
	
	<select id="selectJobAll" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
	</select>
	
	<select id="selectJobById" parameterType="Long" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where job_id = #{jobId}
	</select>

	<!--从亭南获取tagInfo数据-->
	<select id="getTagInfoByTingNan" resultType="com.ruoyi.quartz.domain.TagInfo">
		select
		<include refid="TagInfoVo"></include>
		from TagInfo
	</select>


	<!--从亭南获取LiveData数据-->
	<select id="getLiveDataByTingNan" resultType="com.ruoyi.quartz.domain.LiveData">
		select
		<include refid="LiveDataVo"></include>
		from LiveData
	</select>

	<!--从亭南获取AlarmHis数据-->
	<select id="getAlarmHisByTingNan" resultType="com.ruoyi.quartz.domain.AlarmHis">
		select
		<include refid="AlarmHisVo"></include>
		from AlarmHis
	</select>

	<!--从亭南获取AlarmReal数据-->
	<select id="getAlarmRealByTingNan" resultType="com.ruoyi.quartz.domain.AlarmReal">
		select
		<include refid="AlarmRealVo"></include>
		from AlarmReal
	</select>

	<!--查询数量InfoEventCount-->
	<select id="getInfoEventCount" resultType="java.lang.Integer">
		select counts from info_event_count
	</select>

	<!--查询数量InfoEventCount-->
	<select id="getInfoEventCountByTingNan" resultType="java.lang.Integer">
		select count(id_) from info_event where event_ = 1
	</select>

	<!--查询亭南数据InfoEvent-->
	<select id="getInfoEventByTingNan" resultType="com.ruoyi.quartz.domain.InfoEvent">
        select <include refid="InfoEventVo"/>
		from info_event
		where event_ = 1
	</select>

	<!--查询亭南LiveDataCount的数量-->
	<select id="getLiveDataCountsByTingNan" resultType="java.lang.Integer">
		select counts from LiveDataCount
	</select>


	<delete id="deleteJobById" parameterType="Long">
 		delete from sys_job where job_id = #{jobId}
 	</delete>
 	
 	<delete id="deleteJobByIds" parameterType="Long">
 		delete from sys_job where job_id in
 		<foreach collection="array" item="jobId" open="(" separator="," close=")">
 			#{jobId}
        </foreach> 
 	</delete>

	<!--清空阿里云数据库中TagInfo表内容-->
	<delete id="deleteTagInfoByAliYun">
      DELETE FROM TagInfo
	</delete>

	<!--清空阿里云数据库中LiveData表内容-->
	<delete id="deleteLiveDataByAliYun">
		DELETE FROM LiveData
	</delete>

	<!--清空阿里云数据库中AlarmHis表内容-->
	<delete id="deleteAlarmHisByAliYun">
		DELETE FROM AlarmHis
	</delete>

	<!--清空阿里云数据库中AlarmReal表内容-->
	<delete id="deleteAlarmRealByAliYun">
		DELETE FROM AlarmReal
	</delete>

	<!--清空阿里云数据库中InfoEvent表内容-->
	<delete id="deleteInfoEventToALiYun">
		DELETE FROM info_event
	</delete>

	<update id="updateJob" parameterType="SysJob">
 		update sys_job
 		<set>
 			<if test="jobName != null and jobName != ''">job_name = #{jobName},</if>
 			<if test="jobGroup != null and jobGroup != ''">job_group = #{jobGroup},</if>
 			<if test="invokeTarget != null and invokeTarget != ''">invoke_target = #{invokeTarget},</if>
 			<if test="cronExpression != null and cronExpression != ''">cron_expression = #{cronExpression},</if>
 			<if test="misfirePolicy != null and misfirePolicy != ''">misfire_policy = #{misfirePolicy},</if>
 			<if test="concurrent != null and concurrent != ''">concurrent = #{concurrent},</if>
 			<if test="status !=null">status = #{status},</if>
 			<if test="remark != null and remark != ''">remark = #{remark},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = GETDATE()
 		</set>
 		where job_id = #{jobId}
	</update>

	<!--更新亭南数据库info_event_count数量-->
	<update id="updateInfoEventCount">
		update info_event_count set counts = #{counts} where counts = #{count}
	</update>

	<insert id="insertJob" parameterType="SysJob" useGeneratedKeys="true" keyProperty="jobId">
 		insert into sys_job(
 			<if test="jobId != null and jobId != 0">job_id,</if>
 			<if test="jobName != null and jobName != ''">job_name,</if>
 			<if test="jobGroup != null and jobGroup != ''">job_group,</if>
 			<if test="invokeTarget != null and invokeTarget != ''">invoke_target,</if>
 			<if test="cronExpression != null and cronExpression != ''">cron_expression,</if>
 			<if test="misfirePolicy != null and misfirePolicy != ''">misfire_policy,</if>
 			<if test="concurrent != null and concurrent != ''">concurrent,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="jobId != null and jobId != 0">#{jobId},</if>
 			<if test="jobName != null and jobName != ''">#{jobName},</if>
 			<if test="jobGroup != null and jobGroup != ''">#{jobGroup},</if>
 			<if test="invokeTarget != null and invokeTarget != ''">#{invokeTarget},</if>
 			<if test="cronExpression != null and cronExpression != ''">#{cronExpression},</if>
 			<if test="misfirePolicy != null and misfirePolicy != ''">#{misfirePolicy},</if>
 			<if test="concurrent != null and concurrent != ''">#{concurrent},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			GETDATE()
 		)
	</insert>

    <!--把亭南TagInfo数据同步到阿里云中-->
	<insert id="insertDataByTingNan" parameterType="com.ruoyi.quartz.domain.TagInfo">

		INSERT  INTO  TagInfo(TagKey,TagName,TagDesc,TagType,DataType,ValueType,DigCount,Unit,SystemType,
		RangMin,RangMax,LowAlarm,DealAlarm,SendSms,CreateDate,CreateUserId,CreateUserName,ModifyDate,
		ModifyUserId,ModifyUserName
		)
		 values
		<foreach collection="tagInfos" item="tagInfo" index="index" separator=",">
			(
			#{tagInfo.tagKey},
			#{tagInfo.tagName},
			#{tagInfo.tagDesc},
			#{tagInfo.tagType},
			#{tagInfo.dataType},
			#{tagInfo.valueType},
			#{tagInfo.digCount},
			#{tagInfo.unit},
			#{tagInfo.systemType},
			#{tagInfo.rangMin},
			#{tagInfo.rangMax},
			#{tagInfo.lowAlarm},
			#{tagInfo.dealAlarm},
			#{tagInfo.sendSms},
			#{tagInfo.createDate},
			#{tagInfo.createUserId},
			#{tagInfo.createUserName},
			#{tagInfo.modifyDate},
			#{tagInfo.modifyUserId},
			#{tagInfo.modifyUserName}
			)
		</foreach>

	</insert>

	<!--把亭南LiveData数据同步到阿里云中-->
	<insert id="insertLiveDataByTingNan" parameterType="com.ruoyi.quartz.domain.LiveData">
      insert  into LiveData (
		TagKey,
		value,
		timestamp,
		TagStatus
		)
      values
      <foreach collection="liveDatas" item="liveData" index="index" separator=",">
		  (
		  #{liveData.tagKey},
		  #{liveData.value},
		  #{liveData.timestamp},
		  #{liveData.tagStatus}
		  )
	  </foreach>
	</insert>

	<!--把亭南AlarmHis数据同步到阿里云中-->
	<insert id="insertAlarmHisByTingNan" parameterType="com.ruoyi.quartz.domain.AlarmHis">
		insert into AlarmHis(
		ID,
		TagKey,
		LowAlarm,
		StartValue,
		EndValue,
		AvgValue,
		MaxValue,
		Duration,
		StartTime,
		EndTime,
		CreateTime
		)
		values
        <foreach collection="alarmHiss" item="alarmHis" index="index" separator=",">
			(
			#{alarmHis.id},
			#{alarmHis.tagKey},
			#{alarmHis.lowAlarm},
			#{alarmHis.startValue},
			#{alarmHis.endValue},
			#{alarmHis.avgValue},
			#{alarmHis.maxValue},
			#{alarmHis.duration},
			#{alarmHis.startTime},
			#{alarmHis.endTime},
			#{alarmHis.createTime}
			)
		</foreach>

	</insert>

	<!--把亭南AlarmReal数据同步到阿里云中-->
	<insert id="insertAlarmRealDataByTingNan" parameterType="com.ruoyi.quartz.domain.AlarmReal">
		insert into AlarmReal(
		ID,
		TagKey,
		LowAlarm,
		StartValue,
		EndValue,
		AvgValue,
		MaxValue,
		Duration,
		StartTime,
		EndTime,
		CreateTime
		)
		values
		<foreach collection="alarmReals" item="alarmReal" index="index" separator=",">
			(
			#{alarmReal.id},
			#{alarmReal.tagKey},
			#{alarmReal.lowAlarm},
			#{alarmReal.startValue},
			#{alarmReal.endValue},
			#{alarmReal.avgValue},
			#{alarmReal.maxValue},
			#{alarmReal.duration},
			#{alarmReal.startTime},
			#{alarmReal.endTime},
			#{alarmReal.createTime}
			)
		</foreach>
	</insert>
    <insert id="insertTagInfoData" parameterType="com.ruoyi.quartz.domain.TagInfo">
		INSERT  INTO  TagInfo(TagKey,TagName,TagDesc,TagType,DataType,ValueType,DigCount,Unit,SystemType,
		RangMin,RangMax,LowAlarm,DealAlarm,SendSms,CreateDate,CreateUserId,CreateUserName,ModifyDate,
		ModifyUserId,ModifyUserName
		)
		 values
		 (
			#{tagKey},
			#{tagName},
			#{tagDesc},
			#{tagType},
			#{dataType},
			#{valueType},
			#{digCount},
			#{unit},
			#{systemType},
			#{rangMin},
			#{rangMax},
			#{lowAlarm},
			#{dealAlarm},
			#{sendSms},
			#{createDate},
			#{createUserId},
			#{createUserName},
			#{modifyDate},
			#{modifyUserId},
			#{modifyUserName}
			)

	</insert>

	<!--插入InfoEvent数据到阿里云中-->
	<insert id="insertInfoEventToALiYun">
		INSERT  INTO  info_event(time_,systype,tagname,tagkey,Device,SubDevice,addr_,val_,
		info_,event_,class_,user_,res_,varinfo_,confirm_,cuser_,ctime_
		)
		 values
		 (
			#{times},
			#{systype},
			#{tagname},
			#{tagkey},
			#{device},
			#{subDevice},
			#{addr},
			#{val},
			#{info},
			#{event},
			#{classs},
			#{users},
			#{res},
			#{varinfo},
			#{confirm},
			#{cuser},
			#{ctime}

			)

	</insert>


</mapper>